name: Manual tests
on:
  workflow_dispatch:
    # To test custom commits manually
    inputs:
      ref:
        description: 'Git reference (commit hash or branch name) to build from'
        required: true
        type: string

permissions: {}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-24.04
    steps:

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
          persist-credentials: false
          ref: ${{ inputs.ref }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: check-fmt
        run: make check-fmt

      - name: check-jsonnetfmt
        run: make check-jsonnetfmt

      - name: Get year and week number
        id: get-year-week-number
        run: echo "date=$(date +"%Yweek%U")" >> $GITHUB_OUTPUT

      - name: cache golangci
        uses: actions/cache@v4
        with:
          path: .cache/golangci-lint
          key: golangci-lint-${{ runner.os }}-${{ steps.get-year-week-number.outputs.date }}-${{ hashFiles('go.mod', '.golangci.yml') }}

      - name: lint
        # using env instead of template expansions to avoid template injection
        # https://woodruffw.github.io/zizmor/audits/#template-injection
        run: |
          make lint base=origin/${BASE_REF}
          sudo chown -R $(id -u):$(id -g) .cache/golangci-lint  # needed to archive cache
        env:
          BASE_REF: ${{ inputs.ref }}


  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        test-target:
          [
            test-with-cover-pkg,
            test-with-cover-tempodb,
            test-with-cover-tempodb-wal,
            test-with-cover-others,
          ]

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          ref: ${{ inputs.ref }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Run Tests
        run: make ${{ matrix.test-target }}

  integration-tests:
    name: Run integration tests
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        test-target:
          [
            test-e2e,
            test-e2e-api,
            test-integration-poller,
            test-e2e-deployments,
            test-e2e-ingest,
          ]

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          ref: ${{ inputs.ref }}

      - name: Fetch tags
        run: git fetch --prune --unshallow --tags
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Run Tests
        run: make ${{ matrix.test-target }}

  build:
    name: Build
    runs-on: ubuntu-24.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          ref: ${{ inputs.ref }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Build Tempo
        run: make tempo

      - name: generate-manifest
        run: make generate-manifest

      - name: Build tempo-query
        run: make tempo-query

      - name: Build vulture
        run: make tempo-vulture

      - name: Build tempo-cli
        run: make tempo-cli

  benchmark:
    name: Benchmark
    runs-on: ubuntu-24.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          ref: ${{ inputs.ref }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Bench
        run: make test-bench
